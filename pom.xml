<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.cloudera.labs.envelope</groupId>
  <artifactId>envelope-parent</artifactId>
  <version>0.7.0</version>
  <packaging>pom</packaging>
  
  <inceptionYear>2015</inceptionYear>
  <description>Envelope is an Apache Spark application framework for implementing streaming and batch data pipelines.</description>
  <url>https://github.com/cloudera-labs/envelope</url>
  <organization>
    <name>Cloudera, Inc.</name>
    <url>http://www.cloudera.com</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <modules>
    <module>core</module>
    <module>lib</module>
    <module>external/hbase</module>
    <module>external/impala</module>
    <module>external/kafka</module>
    <module>external/kudu</module>
    <module>external/zookeeper</module>
    <module>examples</module>
    <module>build/envelope</module>
  </modules>
  
  <properties>
    <!-- Dependencies -->
    <scala.version>2.11</scala.version>
    <spark.version>2.1.0</spark.version>
    <guava.version>16.0.1</guava.version>
    <typesafe.config.version>1.2.1</typesafe.config.version>
    <slf4j.version>1.7.5</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <snappy.java.version>1.1.2.4</snappy.java.version>
    <!-- Test Dependencies -->
    <junit.version>4.13.1</junit.version>
    <hamcrest.version>2.0.0.0</hamcrest.version>
    <jmockit.version>1.22</jmockit.version>
    <!-- Plugins -->
    <maven.compiler.version>2.3.1</maven.compiler.version>
    <maven.javadoc.version>3.0.0</maven.javadoc.version>
    <maven.surefire.version>2.22.0</maven.surefire.version>
    <maven.dependency.version>2.1</maven.dependency.version>
    <maven.assembly.version>2.6</maven.assembly.version>
    <maven.shade.version>2.4</maven.shade.version>
    <maven.release.version>2.5.3</maven.release.version>
    <maven.jar.version>2.2</maven.jar.version>
    <apache.rat.version>0.12</apache.rat.version>
    <license.maven.version>3.0</license.maven.version>
    <asciidoctor.maven.version>1.5.6</asciidoctor.maven.version>
    <!-- Build -->
    <parent.relative.dir/>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.xerial.snappy</groupId>
          <artifactId>snappy-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_${scala.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${typesafe.config.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${snappy.java.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-junit</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>${jmockit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <!-- Set working directory for SparkSession's Hive support -->
        <configuration>
          <workingDirectory>${project.build.directory}</workingDirectory>
          <systemPropertyVariables>
            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            <substitution.test>substitution value</substitution.test>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven.shade.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.cloudera.labs.envelope.EnvelopeMain</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
              <relocations>
                <relocation>
                  <pattern>com.slf4j</pattern>
                  <shadedPattern>envelope.shaded.com.slf4j</shadedPattern>
                </relocation>
              </relocations>
              <filters>
                <filter>
                  <!-- exclude invalid signature contained in kitesdk dependencies -->
                  <artifact>org.eclipse.jetty.orbit:javax.servlet</artifact>
                  <excludes>
                      <exclude>META-INF/ECLIPSEF.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.version}</version>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license.maven.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin-git</artifactId>
            <version>${license.maven.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <header>${parent.relative.dir}licenses/APACHE-2.template</header>
          <headerDefinitions>
            <headerDefinition>${parent.relative.dir}licenses/slashstar-format.xml</headerDefinition>
          </headerDefinitions>
          <includes>
            <include>**/*.java</include>
          </includes>
          <properties>
            <owner>${project.organization.name}</owner>
            <url>${project.organization.url}</url>
          </properties>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <!--
              Check every build and update the license header on all code files.
            -->
            <id>format</id>
            <goals>
              <goal>format</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>${apache.rat.version}</version>
        <configuration>
          <includes>
            <include>**/*.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.version}</version>
        <configuration>
          <sourceDirectory>docs</sourceDirectory>
          <outputDirectory>build/envelope/target/docs/html</outputDirectory>
          <backend>html</backend>
          <doctype>book</doctype>
        </configuration>
        <executions>
          <execution>
            <id>output-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
